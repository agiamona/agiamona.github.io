{"version":3,"sources":["components/List.tsx","components/ImageCardStyles.tsx","components/ImageCardMinimized.tsx","components/ExternalLink.tsx","components/ImageCardExpanded.tsx","components/ImageCard.tsx","components/ProjectList.tsx"],"names":["ListContainer","styled","ul","ListItem","li","props","narrow","BulletContainer","span","List","items","listItems","map","item","index","icon","aria-hidden","defaultProps","CardContainer","div","theme","colors","background","shodows","expand","columns","breakpoints","defaultNoMobile","CardSubContainer","centered","CloseButton","button","foreground","DateText","p","DetailsContainer","Description","ExpandIcon","Heading","h3","SubHeading","h4","LinksContainer","mobile","Tagline","Thumbnail","img","bg","borders","responsiveSize","ImageCardMinimized","project","onClick","title","tagline","thumbnail","thumbnailAlt","placeholderThumbnail","alt","loading","src","height","width","StyledLink","a","ExternalLink","url","name","projectMiniMobile","href","target","rel","ImageCardExpanded","liveSite","sourceCode","description","detailsList","dates","tech","aria-label","projectMobile","length","start","end","result","dateString","ImageCard","useState","setExpand","toggleExpand","cardRef","useRef","useEffect","current","scrollIntoView","behavior","expandedCard","minimizedCard","ref","undefined","ProjectList","projectCards","projects"],"mappings":"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","file":"static/js/8.06b4fe2c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst ListContainer = styled.ul`\r\n  list-style: none;\r\n  text-align: left;\r\n  width: 100%;\r\n`;\r\n\r\nconst ListItem = styled.li<{ narrow?: boolean }>`\r\n  padding: ${(props) => (props.narrow ? \"0.2em 0em\" : \"0.5em 0em\")};\r\n  display: flex;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst BulletContainer = styled.span`\r\n  padding-top: 0.03rem;\r\n  padding-right: 0.5rem;\r\n`;\r\n\r\ninterface IList {\r\n  items: string[];\r\n  narrow?: boolean;\r\n}\r\nexport default function List(props: IList): JSX.Element {\r\n  const { items, narrow } = props;\r\n\r\n  const listItems = items.map((item, index) => (\r\n    <ListItem key={index} narrow={narrow}>\r\n      <BulletContainer>\r\n        <FontAwesomeIcon icon={[\"fas\", \"angle-double-right\"]} aria-hidden />\r\n      </BulletContainer>\r\n      {item}\r\n    </ListItem>\r\n  ));\r\n\r\n  return <ListContainer>{listItems}</ListContainer>;\r\n}\r\n\r\nList.defaultProps = {\r\n  narrow: false,\r\n};\r\n","import styled from \"styled-components\";\r\nimport { breakpoints } from \"../styles/breakpoints\";\r\n\r\nexport const CardContainer = styled.div<{ expand: boolean; columns?: string }>`\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  filter: drop-shadow(\r\n    0.15em 0.25em 0.15em ${({ theme }) => theme.colors.shodows}\r\n  );\r\n  width: ${(props) => (props.expand ? \"80vw\" : \"16em\")};\r\n  min-height: ${(props) => (props.expand ? \"25em\" : \"14.5em\")};\r\n  padding: ${(props) => (props.expand ? \"1.5em\" : \"0\")};\r\n  padding-bottom: 1.5rem;\r\n  cursor: ${(props) => (props.expand ? \"auto\" : \"pointer\")};\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: nowrap;\r\n  margin: 1rem;\r\n\r\n  ${(props) => props.columns} {\r\n    flex-direction: column;\r\n    padding-top: ${(props) => (props.expand ? \"4em\" : \"0\")};\r\n    padding-bottom: ${(props) => (props.expand ? \"4em\" : \"1.5em\")};\r\n  }\r\n\r\n  & ${this} img {\r\n    filter: ${(props) => (props.expand ? \"none\" : \"brightness(1)\")};\r\n  }\r\n\r\n  & :hover {\r\n    & ${this} img {\r\n      filter: ${(props) => (props.expand ? \"none\" : \"brightness(1.5 )\")};\r\n    }\r\n  }\r\n`;\r\n\r\nCardContainer.defaultProps = {\r\n  columns: breakpoints.defaultNoMobile,\r\n};\r\n\r\nexport const CardSubContainer = styled.div<{ centered?: boolean }>`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: ${(props) => (props.centered ? \"center\" : \"flex-start\")};\r\n`;\r\n\r\nexport const CloseButton = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  color: ${({ theme }) => theme.colors.foreground};\r\n  position: absolute;\r\n  top: 0.5rem;\r\n  right: 0.5rem;\r\n  font-size: 2rem;\r\n  z-index: 5000;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const DateText = styled.p`\r\n  font-style: italic;\r\n  font-size: 0.9rem;\r\n  margin-top: -0.5rem;\r\n`;\r\n\r\nexport const DetailsContainer = styled.div`\r\n  padding: 0 1rem;\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  text-align: left;\r\n`;\r\n\r\nexport const ExpandIcon = styled.button`\r\n  color: ${({ theme }) => theme.colors.foreground};\r\n  background-color: transparent;\r\n  border: none;\r\n  float: right;\r\n  text-align: right;\r\n  font-size: 1.1rem;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  bottom: 0.25rem;\r\n  right: 0.6rem;\r\n  font-weight: bold;\r\n\r\n  & ${this} svg {\r\n    font-size: 1.2rem;\r\n    position: relative;\r\n    top: 0.12rem;\r\n  }\r\n`;\r\n\r\nexport const Heading = styled.h3`\r\n  color: ${({ theme }) => theme.colors.foreground};\r\n  font-weight: 900;\r\n  padding-bottom: 0.4rem;\r\n  text-align: left;\r\n  width: 100%;\r\n`;\r\n\r\nexport const SubHeading = styled.h4`\r\n  color: ${({ theme }) => theme.colors.foreground};\r\n  font-weight: 900;\r\n  padding-bottom: 0.4rem;\r\n  text-align: left;\r\n  width: 100%;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const LinksContainer = styled.div<{ mobile: string }>`\r\n  margin-top: 0.5rem;\r\n\r\n  ${(props) => props.mobile} {\r\n    padding-bottom: 1rem;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Tagline = styled.p`\r\n  color: ${({ theme }) => theme.colors.foreground};\r\n  padding-bottom: 0.4rem;\r\n  min-height: 3rem;\r\n`;\r\n\r\nexport const Thumbnail = styled.img<{ bg: string; responsiveSize?: boolean }>`\r\n  background: ${({ theme }) => theme.colors.background}\r\n    url(${(props) => props.bg}) no-repeat center center;\r\n  background-size: cover;\r\n  border: solid 1px ${({ theme }) => theme.colors.borders};\r\n  height: ${(props) => (props.responsiveSize ? \"auto\" : \"9em\")};\r\n  width: ${(props) => (props.responsiveSize ? \"90%\" : \"16em\")};\r\n`;\r\n\r\nThumbnail.defaultProps = {\r\n  responsiveSize: false,\r\n};\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport {\r\n  Thumbnail,\r\n  DetailsContainer,\r\n  Heading,\r\n  Tagline,\r\n  ExpandIcon,\r\n  CardSubContainer,\r\n} from \"./ImageCardStyles\";\r\nimport IProject from \"./IProject\";\r\n\r\nexport default function ImageCardMinimized(props: {\r\n  project: IProject;\r\n  onClick: () => void;\r\n}): JSX.Element {\r\n  const { project, onClick } = props;\r\n  const {\r\n    title,\r\n    tagline,\r\n    thumbnail,\r\n    thumbnailAlt,\r\n    placeholderThumbnail,\r\n  } = project;\r\n\r\n  return (\r\n    <CardSubContainer>\r\n      <Thumbnail\r\n        alt={thumbnailAlt}\r\n        loading=\"lazy\"\r\n        src={thumbnail}\r\n        height=\"144\"\r\n        width=\"256\"\r\n        bg={placeholderThumbnail}\r\n      />\r\n      <DetailsContainer>\r\n        <Heading>{title}</Heading>\r\n        <Tagline>{tagline}</Tagline>\r\n        <ExpandIcon onClick={onClick}>\r\n          More Info{\" \"}\r\n          <FontAwesomeIcon icon={[\"fas\", \"angle-right\"]} aria-hidden />\r\n        </ExpandIcon>\r\n      </DetailsContainer>\r\n    </CardSubContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { breakpoints } from \"../styles/breakpoints\";\r\n\r\nconst StyledLink = styled.a<{ mobile: string }>`\r\n  text-decoration: none;\r\n  color: ${({ theme }) => theme.colors.foreground};\r\n  font-weight: bold;\r\n  margin: 0 1rem;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  &:visited {\r\n    color: ${({ theme }) => theme.colors.foreground};\r\n  }\r\n  & sup {\r\n    font-size: 0.7rem;\r\n  }\r\n\r\n  ${(props) => props.mobile} {\r\n    display: block;\r\n    padding-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nexport default function ExternalLink(props: {\r\n  url: string;\r\n  name: string;\r\n}): JSX.Element {\r\n  const { url, name } = props;\r\n\r\n  return (\r\n    <StyledLink\r\n      mobile={breakpoints.projectMiniMobile}\r\n      href={url}\r\n      target=\"_blank\"\r\n      rel=\"noreferrer\"\r\n    >\r\n      {name}\r\n      <sup>\r\n        <FontAwesomeIcon icon=\"external-link-alt\" aria-hidden />\r\n      </sup>\r\n    </StyledLink>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ExternalLink from \"./ExternalLink\";\r\nimport {\r\n  CardSubContainer,\r\n  Thumbnail,\r\n  Heading,\r\n  CloseButton,\r\n  Description,\r\n  SubHeading,\r\n  LinksContainer,\r\n  DateText,\r\n} from \"./ImageCardStyles\";\r\nimport List from \"./List\";\r\n\r\nimport IProject from \"./IProject\";\r\nimport { breakpoints } from \"../styles/breakpoints\";\r\n\r\nexport default function ImageCardExpanded(props: {\r\n  project: IProject;\r\n  onClick: () => void;\r\n}): JSX.Element {\r\n  const { project, onClick } = props;\r\n  const {\r\n    title,\r\n    thumbnailAlt,\r\n    thumbnail,\r\n    liveSite,\r\n    sourceCode,\r\n    description,\r\n    detailsList,\r\n    dates,\r\n    tech,\r\n    placeholderThumbnail,\r\n  } = project;\r\n\r\n  const dateString = (): string => {\r\n    if (!dates) {\r\n      return \"\";\r\n    }\r\n    const { start, end } = dates;\r\n    let result = \"\";\r\n\r\n    if (start && end) {\r\n      result = `${start} to ${end}`;\r\n    } else if (start && !end) {\r\n      result = `${start} to Present`;\r\n    } else if (!start && end) {\r\n      result = end;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CloseButton aria-label=\"Close Project Details\" onClick={onClick}>\r\n        <FontAwesomeIcon icon=\"times\" aria-hidden />\r\n      </CloseButton>\r\n      <CardSubContainer centered>\r\n        <Thumbnail\r\n          loading=\"lazy\"\r\n          alt={thumbnailAlt}\r\n          src={thumbnail}\r\n          height=\"144\"\r\n          width=\"256\"\r\n          bg={placeholderThumbnail}\r\n          responsiveSize\r\n        />\r\n        <LinksContainer mobile={breakpoints.projectMobile}>\r\n          {liveSite && liveSite.length > 0 ? (\r\n            <ExternalLink url={liveSite} name=\"Visit Site\" />\r\n          ) : null}\r\n          {sourceCode && sourceCode.length > 0 ? (\r\n            <ExternalLink url={sourceCode} name=\"Source Code\" />\r\n          ) : null}\r\n        </LinksContainer>\r\n      </CardSubContainer>\r\n\r\n      <CardSubContainer>\r\n        <Heading>{title}</Heading>\r\n        <DateText>{dateString()}</DateText>\r\n        <SubHeading>Main Tech</SubHeading>\r\n        <Description>{tech}</Description>\r\n        <SubHeading>Description</SubHeading>\r\n        <Description>{description}</Description>\r\n        <SubHeading>Details</SubHeading>\r\n        {detailsList ? <List items={detailsList} narrow /> : null}\r\n      </CardSubContainer>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { CardContainer } from \"./ImageCardStyles\";\r\nimport ImageCardMinimized from \"./ImageCardMinimized\";\r\nimport ImageCardExpanded from \"./ImageCardExpanded\";\r\nimport IProject from \"./IProject\";\r\nimport { breakpoints } from \"../styles/breakpoints\";\r\n\r\nexport default function ImageCard(props: { project: IProject }): JSX.Element {\r\n  const [expand, setExpand] = useState(false);\r\n  const { project } = props;\r\n\r\n  const toggleExpand = (): void => {\r\n    setExpand(!expand);\r\n  };\r\n\r\n  const cardRef = useRef<HTMLDivElement>(null);\r\n  useEffect(() => {\r\n    if (expand && cardRef.current) {\r\n      cardRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  });\r\n\r\n  const expandedCard = (\r\n    <ImageCardExpanded project={project} onClick={toggleExpand} />\r\n  );\r\n  const minimizedCard = (\r\n    <ImageCardMinimized project={project} onClick={toggleExpand} />\r\n  );\r\n\r\n  return (\r\n    <CardContainer\r\n      ref={cardRef}\r\n      onClick={expand ? undefined : toggleExpand}\r\n      expand={expand}\r\n      columns={breakpoints.projectMobile}\r\n    >\r\n      {expand ? expandedCard : minimizedCard}\r\n    </CardContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ImageCard from \"./ImageCard\";\r\nimport IProject from \"./IProject\";\r\nimport { SubSectionContainer } from \"./SectionStyles\";\r\n\r\nexport default function ProjectList(props: {\r\n  projects: IProject[];\r\n}): JSX.Element {\r\n  const { projects } = props;\r\n\r\n  const projectCards = projects.map(\r\n    (project: IProject): JSX.Element => (\r\n      <ImageCard project={project} key={project.title} />\r\n    )\r\n  );\r\n\r\n  return <SubSectionContainer>{projectCards}</SubSectionContainer>;\r\n}\r\n"],"sourceRoot":""}