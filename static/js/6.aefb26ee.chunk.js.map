{"version":3,"sources":["components/SectionStyles.tsx","components/SectionComponent.tsx","components/ContactForm.tsx","components/SocialMediaLinks.tsx","components/sections/ContactSection.tsx"],"names":["SubSectionContainer","styled","div","SectionContainer","article","transparent","theme","colors","background","SectionHeader","h2","transparentSection","heading","solidSection","borders","Section","props","id","title","children","defaultProps","Form","form","Input","input","SubmitButton","foreground","TextArea","textarea","ContactForm","onSubmit","useState","name","email","subject","message","formData","setformData","handleChange","e","target","value","action","method","type","placeholder","aria-label","onChange","required","rows","cols","SocialLink","a","mobile","SocialMediaLinksContainer","SocialMediaLinks","links","SocialLinkItems","map","item","breakpoints","contactMobile","href","rel","icon","aria-hidden","FormResults","FormContainer","shodows","FormIntro","p","FormIntroContainer","OtherPlacesContainer","SubSection","h3","ContactSection","SUCCESS","ERROR","NOT_SUBMITTED","SUBMITTING","contact","useForm","state","handleSubmit","submitting","succeeded","errors","result","length"],"mappings":"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","file":"static/js/6.aefb26ee.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const SubSectionContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-content: center;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const SectionContainer = styled.article<{ transparent: boolean }>`\r\n  background-color: ${({ transparent, theme }) =>\r\n    transparent ? \"transparent\" : theme.colors.background};\r\n  padding: 0 2rem;\r\n  padding-bottom: 8rem;\r\n`;\r\n\r\nexport const SectionHeader = styled.h2<{ transparent: boolean }>`\r\n  color: ${({ theme, transparent }) =>\r\n    transparent\r\n      ? theme.colors.transparentSection.heading\r\n      : theme.colors.solidSection.heading};\r\n  padding: 1.5rem;\r\n  padding-left: 3rem;\r\n  border-bottom: 1.5px solid\r\n    ${({ theme, transparent }) =>\r\n      transparent\r\n        ? theme.colors.transparentSection.borders\r\n        : theme.colors.solidSection.borders};\r\n  margin-bottom: 3rem;\r\n`;\r\n","import React from \"react\";\r\nimport { SectionHeader, SectionContainer } from \"./SectionStyles\";\r\n\r\ninterface SectionProps {\r\n  title: string;\r\n  transparent?: boolean;\r\n  id?: string;\r\n  children?: React.ReactChild | React.ReactChild[];\r\n}\r\n\r\nexport default function Section(props: SectionProps): JSX.Element {\r\n  const { id, title, children, transparent } = props;\r\n  return (\r\n    <SectionContainer id={id} transparent={!!transparent}>\r\n      <SectionHeader transparent={!!transparent}>{title}</SectionHeader>\r\n      {children}\r\n    </SectionContainer>\r\n  );\r\n}\r\n\r\nSection.defaultProps = {\r\n  id: \"\",\r\n  transparent: false,\r\n  children: null,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  align-content: space-around;\r\n  min-height: 20rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  font-size: 1rem;\r\n  margin-bottom: 1rem;\r\n  background-color: transparent;\r\n  border: 1px solid ${({ theme }) => theme.colors.borders};\r\n  padding: 0.5rem;\r\n  font-family: \"Roboto Slab\", Arial, sans-serif;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SubmitButton = styled.input`\r\n  color: ${({ theme }) => theme.colors.background};\r\n  background-color: ${({ theme }) => theme.colors.foreground};\r\n  border: 3px solid ${({ theme }) => theme.colors.foreground};\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  border-radius: 8px;\r\n  padding: 0.3em 1rem;\r\n  margin: auto;\r\n  font-family: \"Roboto Slab\", Arial, sans-serif;\r\n  width: 100%;\r\n\r\n  transition: all 0.1s ease-in;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n    border: 3px solid ${({ theme }) => theme.colors.foreground};\r\n    color: ${({ theme }) => theme.colors.foreground};\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n  font-size: 1rem;\r\n  padding 0.5rem;\r\n  font-family: \"Roboto Slab\", Arial, sans-serif;\r\n  background-color: transparent;\r\n  border: 1px solid ${({ theme }) => theme.colors.borders};\r\n  border-radius: 5px;\r\n`;\r\n\r\ntype InputChangeType = React.ChangeEvent<HTMLInputElement>;\r\ntype TextareaChangeType = React.ChangeEvent<HTMLTextAreaElement>;\r\n\r\ninterface IForm {\r\n  name: string;\r\n  email: string;\r\n  subject: string;\r\n  message: string;\r\n}\r\n\r\nexport default function ContactForm(props: {\r\n  onSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\r\n}): JSX.Element {\r\n  const { onSubmit } = props;\r\n  const intialformData = {\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\",\r\n  };\r\n  const [formData, setformData] = useState<IForm>(intialformData);\r\n\r\n  const handleChange = (e: InputChangeType | TextareaChangeType) => {\r\n    const { name, value } = e.target;\r\n    setformData({ ...formData, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={onSubmit}\r\n      action=\"https://formspree.io/f/mvovnpvj\"\r\n      method=\"POST\"\r\n    >\r\n      <Input\r\n        type=\"text\"\r\n        id=\"name\"\r\n        name=\"name\"\r\n        placeholder=\"Name*\"\r\n        aria-label=\"Name\"\r\n        value={formData.name}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <Input\r\n        type=\"email\"\r\n        id=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"Email*\"\r\n        aria-label=\"Email\"\r\n        value={formData.email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <Input\r\n        type=\"text\"\r\n        id=\"subject\"\r\n        name=\"subject\"\r\n        placeholder=\"Subject*\"\r\n        aria-label=\"Subject\"\r\n        value={formData.subject}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <TextArea\r\n        id=\"message\"\r\n        name=\"message\"\r\n        rows={6}\r\n        cols={50}\r\n        placeholder=\"Message*\"\r\n        aria-label=\"Message\"\r\n        value={formData.message}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <SubmitButton\r\n        type=\"submit\"\r\n        value=\"Submit\"\r\n        name=\"Submit\"\r\n        aria-label=\"Submit\"\r\n      />\r\n    </Form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { SocialLinkItems, ILink } from \"../assets/NavigationData\";\r\nimport { breakpoints } from \"../styles/breakpoints\";\r\n\r\nconst SocialLink = styled.a<{ mobile: string }>`\r\n  background-color: ${({ theme }) => theme.colors.foreground};\r\n  color: ${({ theme }) => theme.colors.background};\r\n  border: 3px solid ${({ theme }) => theme.colors.foreground};\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n  border-radius: 8px;\r\n  font-size: 1.2rem;\r\n  padding: 0.25em 0.5rem;\r\n  transition: all 0.1s ease-in;\r\n  margin: 0.5rem;\r\n\r\n  &:visited {\r\n    color: ${({ theme }) => theme.colors.background};\r\n  }\r\n  &:hover {\r\n    background-color: transparent;\r\n    color: ${({ theme }) => theme.colors.foreground};\r\n  }\r\n\r\n  & ${this} svg {\r\n    margin-right: 0.3rem;\r\n  }\r\n\r\n  ${(props) => props.mobile} {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst SocialMediaLinksContainer = styled.div`\r\n  width: 100%;\r\n  padding: 0 2rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n  align-content: center;\r\n`;\r\n\r\nexport default function SocialMediaLinks(): JSX.Element {\r\n  const links = SocialLinkItems.map((item: ILink) => (\r\n    <SocialLink\r\n      mobile={breakpoints.contactMobile}\r\n      href={item.href}\r\n      target=\"_blank\"\r\n      rel=\"noreferrer\"\r\n      key={item.href}\r\n    >\r\n      {item.icon ? <FontAwesomeIcon icon={item.icon} aria-hidden /> : null}\r\n      {item.title}\r\n    </SocialLink>\r\n  ));\r\n  return <SocialMediaLinksContainer>{links}</SocialMediaLinksContainer>;\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useForm } from \"@formspree/react\";\r\nimport ContactForm from \"../ContactForm\";\r\nimport Section from \"../SectionComponent\";\r\nimport SocialMediaLinks from \"../SocialMediaLinks\";\r\n\r\nconst FormContainer = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  filter: drop-shadow(\r\n    0.15em 0.25em 0.15em ${({ theme }) => theme.colors.shodows}\r\n  );\r\n  border-radius: 8px;\r\n  padding: 2em 3rem;\r\n  max-width: 40rem;\r\n  min-height: 20rem;\r\n  text-align: center;\r\n  margin: auto;\r\n`;\r\n\r\nconst FormIntro = styled.p`\r\n  width: 80%;\r\n  margin: auto;\r\n  padding-bottom: 1rem;\r\n`;\r\n\r\nconst FormIntroContainer = styled.div`\r\n  text-align: center;\r\n  border-bottom: 1.5px solid ${({ theme }) => theme.colors.borders};\r\n  width: 100%;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst OtherPlacesContainer = styled.div`\r\n  margin-top: 3rem;\r\n`;\r\n\r\nconst SubSection = styled.h3`\r\n  color: ${({ theme }) => theme.colors.foreground};\r\n  margin-bottom: 1rem;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nenum FormResults {\r\n  SUCCESS = \"submissionSuccess\",\r\n  ERROR = \"submissionError\",\r\n  NOT_SUBMITTED = \"notSubmitted\",\r\n  SUBMITTING = \"submitting\",\r\n}\r\n\r\ninterface IContactMessages {\r\n  notSubmitted: string;\r\n  submissionSuccess: string;\r\n  submissionError: string;\r\n  submitting: string;\r\n}\r\n\r\nconst FORM_ID = \"mvovnpvj\";\r\nexport default function ContactSection(props: {\r\n  contact: IContactMessages;\r\n}): JSX.Element {\r\n  const { SUCCESS, ERROR, NOT_SUBMITTED, SUBMITTING } = FormResults;\r\n  const { contact } = props;\r\n  const [state, handleSubmit] = useForm(FORM_ID);\r\n  const { submitting, succeeded, errors } = state;\r\n\r\n  const result = (): FormResults => {\r\n    if (submitting) {\r\n      return SUBMITTING;\r\n    }\r\n    if (succeeded) {\r\n      return SUCCESS;\r\n    }\r\n    if (errors.length > 0) {\r\n      return ERROR;\r\n    }\r\n    return NOT_SUBMITTED;\r\n  };\r\n\r\n  return (\r\n    <Section title=\"Contact Me\" id=\"contact\" transparent>\r\n      <FormContainer>\r\n        <FormIntroContainer>\r\n          <SubSection>Contact Form</SubSection>\r\n          <FormIntro>{contact[result()]}</FormIntro>\r\n        </FormIntroContainer>\r\n        {result() === NOT_SUBMITTED ? (\r\n          <ContactForm onSubmit={handleSubmit} />\r\n        ) : null}\r\n        <OtherPlacesContainer>\r\n          <SubSection>You can also find me at the following places:</SubSection>\r\n          <SocialMediaLinks />\r\n        </OtherPlacesContainer>\r\n      </FormContainer>\r\n    </Section>\r\n  );\r\n}\r\n"],"sourceRoot":""}